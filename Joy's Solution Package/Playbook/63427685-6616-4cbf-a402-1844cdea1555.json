{"docSchemaVersion":1.0,"id":"66f54481a6b1e9f3a9186876","meta":{"actionsByState":{"active":0.0,"fail":0.0,"queued":0.0,"success":0.0},"assets":["Darktrace"],"audit":{"created":{"authProvider":{"id":"","title":"Swimlane"},"date":"2024-09-26T11:24:49.96+00:00","user":{"id":"7c0f03b8-4ea6-4567-a9b2-1be568e5e475","username":"koushik.kumar+git-test@swimlane.com"}},"modified":{"authProvider":{"id":"","title":"Swimlane"},"date":"2024-09-26T11:24:49.96+00:00","user":{"id":"7c0f03b8-4ea6-4567-a9b2-1be568e5e475","username":"koushik.kumar+git-test@swimlane.com"}},"version":1.0},"componentId":"aRWGofnipej9FM2ZG","connectors":["darktrace"],"enabled":true,"playbooks":["component_aS9A5tmGDMK9dzNgm_playbook","component_aRqDSHHUWVWexAD7W_playbook"],"pools":["$default"],"sharingUid":"63427685-6616-4cbf-a402-1844cdea1555","src":"schema: playbook/2\nname: component_aRWGofnipej9FM2ZG_playbook\nactions:\n  Create_Variables_for_VIC:\n    title: Create Variables for VIC\n    type: createVariables\n    description: Create the Provider and Alerts variables\n    on-success:\n    - Get_Incidents: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    inputs:\n    - name: Provider\n      value: Darktrace\n    - name: Alerts\n      value: []\n    inputSchemaReferenceId: e6cd7343-98c4-4d9c-b616-29e8cb29484f\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n  Get_Incidents:\n    title: Get Incidents\n    type: connector\n    description: This action will help to ingest the incidents into turbine.\n    on-success:\n    - Get_Incident_Count: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    action: darktrace.get_incidents\n    inputs:\n      parameters:\n        start_time: '{ $:ref: $inputs.Start_Time }'\n        end_time: '{ $:ref: $inputs.End_Time }'\n        include_ack:\n          $:ref: $inputs.Include_Ack\n    pool: $default\n    meta: {}\n    delay: 0\n    post: {}\n    timeout: 0\n    asset: Darktrace\n    environment: {}\n    testInputs:\n      parameters: {}\n  If_Incident_Exists:\n    title: If Incident Exists\n    type: conditional\n    description: This condition will validate the existance of incidents.\n    on-success: []\n    on-failure: []\n    on-complete: []\n    publish: {}\n    conditions:\n    - action: Loop_Over_Incidents\n      condition:\n        $:and:\n        - - $:ref: $actions.Get_Incident_Count.result.id_count\n          - $:gt: 0\n    else: \"\"\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n    inputSchemaReferenceId: e14b94d4-39ab-432e-a9a7-fdfff8caccc1\n  Get_Incident_Count:\n    title: Get Incident Count\n    type: transformation\n    description: Pulls the incidents out of the response body and counts them\n    on-success:\n    - If_Incident_Exists: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    transformations:\n      incident_count:\n        title: Incident Count\n        description: \"\"\n        display:\n          functions:\n          - function: count\n            inputs:\n            - $:ref: $actions.Get_Incidents.result.json_body\n          advancedView: false\n        inputs:\n          expression: $count(actions.Get_Incidents.result.json_body)\n          data:\n            actions:\n              Get_Incidents:\n                result:\n                  json_body:\n                    $:ref: $actions.Get_Incidents.result.json_body\n        actionType: jsonata\n        timeout: 0\n        meta: {}\n        next: id_count\n      id_count:\n        title: ID Count\n        inputs:\n          data:\n            actions:\n              Get_Incidents:\n                result:\n                  json_body:\n                    $:ref: $actions.Get_Incidents.result.json_body\n          expression: $count(actions.Get_Incidents.result.json_body.**.id)\n        next: \"\"\n        description: \"\"\n        display:\n          functions: []\n          advancedView: true\n        timeout: 0\n        meta: {}\n        actionType: jsonata\n    entrypoint: incident_count\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n  Loop_Over_Incidents:\n    title: Loop Over Incidents\n    type: loop\n    description: Loop over the discovered incidents if present\n    on-success:\n    - Get_Incident_Details: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    entrypoints:\n    - Metadata_Extraction\n    actions:\n      Create_TEDS_Alert:\n        title: Create TEDS Alert\n        type: connector\n        description: Create the TEDS alert\n        on-success: []\n        on-failure: []\n        on-complete: []\n        publish: {}\n        action: $playbook.component_aS9A5tmGDMK9dzNgm_playbook\n        inputs:\n          alert:\n            alert_title: '{ $:ref: $loops.Loop_Over_Incidents.value.title }'\n            alert_mitre_attack_tactic_technique:\n            - $:ref: $actions.Metadata_Extraction.result.mitre_attack_tactic_technique\n            alert_description: '{ $:ref: $loops.Loop_Over_Incidents.value.summary }'\n            alert_organization: '{ $:ref: $variables.Provider }'\n            alert_uid: '{ $:ref: $loops.Loop_Over_Incidents.value.id }'\n            alert_risk_score:\n              $:ref: $actions.Metadata_Extraction.result.incident_threat_score\n            alert_created_timestamp: '{ $:ref: $actions.Metadata_Extraction.result.incident_start_time }'\n            alert_end_timestamp: '{ $:ref: $actions.Metadata_Extraction.result.incident_end_time }'\n            alert_impacted_hostnames:\n              $:ref: $actions.Metadata_Extraction.result.incident_hostname_breach_device\n            alert_impacted_ip_addresses:\n              $:ref: $actions.Metadata_Extraction.result.incident_ip_address_breach_devices\n            alert_provider: '{ $:ref: $variables.Provider }'\n            raw_alert:\n              $:ref: $loops.Loop_Over_Incidents.value\n            observables:\n              $:ref: $actions.Parse_Observables.result.published.observables\n        pool: $default\n        meta: {}\n        delay: 0\n        post: {}\n        timeout: 0\n        asset: \"\"\n        environment: {}\n        testInputs: {}\n      Metadata_Extraction:\n        meta: {}\n        title: Metadata Extraction\n        type: transformation\n        delay: 0\n        pool: \"\"\n        on-success:\n        - Create_Observables_String: {}\n        on-failure: []\n        on-complete: []\n        publish: {}\n        post: {}\n        timeout: 0\n        description: Define fields and massage data to fit the TEDS alert format before creating TEDS alert\n        transformations:\n          raw_incident:\n            title: Raw Incident\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      $:ref: $loops.Loop_Over_Incidents.value\n            actionType: jsonata\n            next: get_metadata\n            timeout: 0\n            meta: {}\n          get_metadata:\n            title: Get Metadata\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.details\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      breachDevices:\n                        $:ref: $loops.Loop_Over_Incidents.value.breachDevices\n                      details:\n                        $:ref: $loops.Loop_Over_Incidents.value.details\n            actionType: jsonata\n            next: incident_start_time\n            timeout: 0\n            meta: {}\n          incident_start_time:\n            title: Incident Start Time\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.periods.start\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      periods:\n                        $:ref: $loops.Loop_Over_Incidents.value.periods\n            actionType: jsonata\n            next: incident_end_time\n            timeout: 0\n            meta: {}\n          incident_end_time:\n            title: Incident End Time\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.periods.end\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      periods:\n                        $:ref: $loops.Loop_Over_Incidents.value.periods\n            actionType: jsonata\n            next: incident_threat_score\n            timeout: 0\n            meta: {}\n          incident_threat_score:\n            title: Incident Threat Score\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.relatedBreaches.threatscore\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      relatedBreaches:\n                        $:ref: $loops.Loop_Over_Incidents.value.relatedBreaches\n            actionType: jsonata\n            next: incident_hostname_breach_device\n            timeout: 0\n            meta: {}\n          incident_hostname_breach_device:\n            title: Incident Hostname (Breach Device)\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.breachDevices.hostname\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      breachDevices:\n                        $:ref: $loops.Loop_Over_Incidents.value.breachDevices\n            actionType: jsonata\n            next: incident_ip_address_breach_devices\n            timeout: 0\n            meta: {}\n          incident_ip_address_breach_devices:\n            title: Incident IP Address (Breach Devices)\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.breachDevices.ip\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      breachDevices:\n                        $:ref: $loops.Loop_Over_Incidents.value.breachDevices\n            actionType: jsonata\n            next: username\n            timeout: 0\n            meta: {}\n          username:\n            title: Username\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: >\n                loops.Loop_Over_Incidents.value.details.contents[key=\"Username observed prior to activity\"].values\n              data: {}\n            actionType: jsonata\n            next: mitre_attack_tactic_technique\n            timeout: 0\n            meta: {}\n          mitre_attack_tactic_technique:\n            title: Mitre attack tactic technique\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            inputs:\n              expression: loops.Loop_Over_Incidents.value.mitreTactics\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      mitreTactics:\n                        $:ref: $loops.Loop_Over_Incidents.value.mitreTactics\n            actionType: jsonata\n            timeout: 0\n            meta: {}\n        entrypoint: raw_incident\n      Parse_Observables:\n        title: Parse Observables\n        type: connector\n        description: \"\"\n        on-success:\n        - Create_TEDS_Alert: {}\n        on-failure: []\n        on-complete: []\n        publish: {}\n        action: $playbook.component_aRqDSHHUWVWexAD7W_playbook\n        inputs:\n          text_value: '{ $:ref: $actions.Create_Observables_String.result.observables }'\n        pool: $default\n        testInputs: {}\n        meta: {}\n        delay: 0\n        post: {}\n        timeout: 0\n        asset: \"\"\n        environment: {}\n      Create_Observables_String:\n        meta: {}\n        title: Create Observables String\n        type: transformation\n        delay: 0\n        pool: \"\"\n        on-success:\n        - Parse_Observables: {}\n        on-failure: []\n        on-complete: []\n        publish: {}\n        post: {}\n        timeout: 0\n        description: 'Transforming the observables to parse them. '\n        transformations:\n          observables:\n            title: Observables\n            inputs:\n              data:\n                loops:\n                  Loop_Over_Incidents:\n                    value:\n                      details:\n                        $:ref: $loops.Loop_Over_Incidents.value.details\n              expression: >-\n                $join(\n                    [\n                    loops.Loop_Over_Incidents.value.details.contents[type=\"externalHost\"].values.ip,\n                    loops.Loop_Over_Incidents.value.details.contents[type=\"externalHost\"].values.hostname\n                    ][$ != null],\n                    \" \"\n                )\n            next: \"\"\n            description: \"\"\n            display:\n              functions: []\n              advancedView: true\n            timeout: 0\n            meta: {}\n            actionType: jsonata\n        entrypoint: observables\n    loop:\n      type: for\n      each:\n        $:ref: $actions.Get_Incidents.result.json_body\n      parallel: false\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n  Update_Incidents:\n    title: Update Incidents\n    type: updateVariables\n    description: Update the alerts variable\n    on-success: []\n    on-failure: []\n    on-complete: []\n    publish: {}\n    inputs:\n    - name: Alerts\n      operation:\n        type: set\n        value:\n          $:ref: $actions.Get_Incident_Details.result.incidents\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n    inputSchemaReferenceId: 737474e4-2f12-4158-b186-3537c032df0b\n  Get_Incident_Details:\n    meta: {}\n    title: Get Incident Details\n    type: transformation\n    delay: 0\n    pool: \"\"\n    on-success:\n    - Update_Incidents: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    post: {}\n    timeout: 0\n    description: Retrieve the Incident from the loop return structure\n    transformations:\n      incidents:\n        title: Incidents\n        description: \"\"\n        display:\n          functions:\n          - function: lookup\n            inputs:\n            - '{ $:ref: $actions.Loop_Over_Incidents.result }'\n            - Create_TEDS_Alert\n          - function: lookup\n            inputs:\n            - published\n          - function: lookup\n            inputs:\n            - alert\n          advancedView: false\n        inputs:\n          expression: $lookup(actions.Loop_Over_Incidents.result,'Create_TEDS_Alert') ~> $lookup('published') ~> $lookup('alert')\n          data:\n            actions:\n              Loop_Over_Incidents:\n                result:\n                  $:ref: $actions.Loop_Over_Incidents.result\n        actionType: jsonata\n        next: \"\"\n        timeout: 0\n        meta: {}\n    entrypoint: incidents\nmeta:\n  customActionInputSchema:\n    Get_Incidents: {}\n    Create_TEDS_Alert:\n      alert:\n        type: object\n        properties:\n          alert_categories:\n            type: array\n            items:\n              type: string\n          alert_created_timestamp:\n            type: string\n          alert_description:\n            type: string\n          alert_end_timestamp:\n            type: string\n          alert_impacted_hostnames:\n            type: array\n            items:\n              type: string\n          alert_impacted_ip_addresses:\n            type: array\n            items:\n              type: string\n          alert_impacted_usernames:\n            type: array\n            items:\n              type: string\n          alert_ingested_timestamp:\n            type: string\n          alert_mitre_attack_tactic_technique:\n            type: array\n            items:\n              type: object\n              properties:\n                tactics:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      name:\n                        type: string\n                      uid:\n                        type: string\n                technique:\n                  type: object\n                  properties:\n                    name:\n                      type: string\n                    uid:\n                      type: string\n                version:\n                  type: string\n          alert_originating_files:\n            type: array\n            items:\n              type: object\n              properties:\n                content:\n                  type: object\n                  properties:\n                    base64:\n                      type: string\n                    turbine_attachment:\n                      type: object\n                file_accessed:\n                  type: string\n                file_created:\n                  type: string\n                file_hashes:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      hash_algorithm:\n                        type: string\n                      hash_value:\n                        type: string\n                file_modified:\n                  type: string\n                file_name:\n                  type: string\n                file_name_enc:\n                  type: string\n                file_size:\n                  type: integer\n                mime_type:\n                  type: string\n                observables:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      observable_enrichments:\n                        type: array\n                        items:\n                          type: object\n                          properties:\n                            enrichment_context:\n                              type: string\n                            enrichment_permalink:\n                              type: string\n                            enrichment_provider:\n                              type: string\n                            enrichment_raw_data:\n                              type: string\n                            enrichment_timestamp:\n                              type: string\n                            enrichment_type:\n                              type: string\n                            enrichment_verdict:\n                              type: string\n                      observable_metadata:\n                        type: object\n                      observable_primary_context:\n                        type: string\n                      observable_primary_permalink:\n                        type: string\n                      observable_primary_provider:\n                        type: string\n                      observable_primary_timestamp:\n                        type: string\n                      observable_primary_verdict:\n                        type: string\n                      observable_type:\n                        type: string\n                      observable_value:\n                        type: string\n          alert_provider:\n            type: string\n          alert_risk_score:\n            type: integer\n          alert_rules:\n            type: array\n            items:\n              type: object\n              properties:\n                rule_description:\n                  type: string\n                rule_id:\n                  type: string\n                rule_name:\n                  type: string\n                rule_type:\n                  type: string\n          alert_severity:\n            type: string\n          alert_title:\n            type: string\n          alert_uid:\n            type: string\n          observables:\n            type: array\n            items:\n              type: object\n              properties:\n                observable_enrichments:\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      enrichment_context:\n                        type: string\n                      enrichment_permalink:\n                        type: string\n                      enrichment_provider:\n                        type: string\n                      enrichment_raw_data:\n                        type: string\n                      enrichment_timestamp:\n                        type: string\n                      enrichment_type:\n                        type: string\n                      enrichment_verdict:\n                        type: string\n                observable_metadata:\n                  type: object\n                observable_primary_context:\n                  type: string\n                observable_primary_permalink:\n                  type: string\n                observable_primary_provider:\n                  type: string\n                observable_primary_timestamp:\n                  type: string\n                observable_primary_verdict:\n                  type: string\n                observable_type:\n                  type: string\n                observable_value:\n                  type: string\n          raw_alert:\n            type: object\n            properties: {}\n    Parse_Observables: {}\ntitle: component_aRWGofnipej9FM2ZG_playbook\ndescription: \"\"\nnamespace: $default\nentrypoints:\n- Create_Variables_for_VIC\npool: \"\"\ntimeout: 0\npublish:\n  Alerts:\n    $:ref: $variables.Alerts\nenvironment: {}\ninputs:\n  type: object\n  required:\n  - Start_Time\n  - End_Time\n  - Include_Ack\n  properties:\n    Start_Time:\n      type: string\n      title: Start Time\n    End_Time:\n      type: string\n      title: End Time\n    Include_Ack:\n      type: boolean\n      title: Include Ack\ntriggers: {}\noutputSchemaReferenceId: d64e2eaa-3975-4dea-9ffc-d7212ab6d95e\n","store":{},"validation":{"valid":true}},"playbook":{"actions":{"Create_Variables_for_VIC":{"meta":{},"title":"Create Variables for VIC","type":"createVariables","delay":0,"pool":"","on-success":[{"Get_Incidents":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Create the Provider and Alerts variables","inputSchemaReferenceId":"e6cd7343-98c4-4d9c-b616-29e8cb29484f","inputs":[{"name":"Provider","value":"Darktrace"},{"name":"Alerts","value":[]}]},"Get_Incidents":{"meta":{},"title":"Get Incidents","type":"connector","delay":0,"pool":"$default","on-success":[{"Get_Incident_Count":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"This action will help to ingest the incidents into turbine.","action":"darktrace.get_incidents","asset":"Darktrace","environment":{},"inputs":{"parameters":{"start_time":"{ $:ref: $inputs.Start_Time }","end_time":"{ $:ref: $inputs.End_Time }","include_ack":{"$:ref":"$inputs.Include_Ack"}}},"testInputs":{"parameters":{}}},"If_Incident_Exists":{"meta":{},"title":"If Incident Exists","type":"conditional","delay":0,"pool":"","on-success":[],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"This condition will validate the existance of incidents.","inputSchemaReferenceId":"e14b94d4-39ab-432e-a9a7-fdfff8caccc1","conditions":[{"action":"Loop_Over_Incidents","condition":{"$:and":[[{"$:ref":"$actions.Get_Incident_Count.result.id_count"},{"$:gt":0}]]}}],"else":""},"Get_Incident_Count":{"meta":{},"title":"Get Incident Count","type":"transformation","delay":0,"pool":"","on-success":[{"If_Incident_Exists":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Pulls the incidents out of the response body and counts them","transformations":{"incident_count":{"title":"Incident Count","inputs":{"data":{"actions":{"Get_Incidents":{"result":{"json_body":{"$:ref":"$actions.Get_Incidents.result.json_body"}}}}},"expression":"$count(actions.Get_Incidents.result.json_body)"},"next":"id_count","description":"","display":{"functions":[{"function":"count","inputs":[{"$:ref":"$actions.Get_Incidents.result.json_body"}]}],"advancedView":false},"timeout":0,"meta":{},"actionType":"jsonata"},"id_count":{"title":"ID Count","inputs":{"data":{"actions":{"Get_Incidents":{"result":{"json_body":{"$:ref":"$actions.Get_Incidents.result.json_body"}}}}},"expression":"$count(actions.Get_Incidents.result.json_body.**.id)"},"next":"","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"incident_count"},"Loop_Over_Incidents":{"meta":{},"title":"Loop Over Incidents","type":"loop","delay":0,"pool":"","on-success":[{"Get_Incident_Details":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Loop over the discovered incidents if present","actions":{"Create_TEDS_Alert":{"meta":{},"title":"Create TEDS Alert","type":"connector","delay":0,"pool":"$default","on-success":[],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Create the TEDS alert","action":"$playbook.component_aS9A5tmGDMK9dzNgm_playbook","asset":"","environment":{},"inputs":{"alert":{"alert_title":"{ $:ref: $loops.Loop_Over_Incidents.value.title }","alert_mitre_attack_tactic_technique":[{"$:ref":"$actions.Metadata_Extraction.result.mitre_attack_tactic_technique"}],"alert_description":"{ $:ref: $loops.Loop_Over_Incidents.value.summary }","alert_organization":"{ $:ref: $variables.Provider }","alert_uid":"{ $:ref: $loops.Loop_Over_Incidents.value.id }","alert_risk_score":{"$:ref":"$actions.Metadata_Extraction.result.incident_threat_score"},"alert_created_timestamp":"{ $:ref: $actions.Metadata_Extraction.result.incident_start_time }","alert_end_timestamp":"{ $:ref: $actions.Metadata_Extraction.result.incident_end_time }","alert_impacted_hostnames":{"$:ref":"$actions.Metadata_Extraction.result.incident_hostname_breach_device"},"alert_impacted_ip_addresses":{"$:ref":"$actions.Metadata_Extraction.result.incident_ip_address_breach_devices"},"alert_provider":"{ $:ref: $variables.Provider }","raw_alert":{"$:ref":"$loops.Loop_Over_Incidents.value"},"observables":{"$:ref":"$actions.Parse_Observables.result.published.observables"}}},"testInputs":{}},"Metadata_Extraction":{"meta":{},"title":"Metadata Extraction","type":"transformation","delay":0,"pool":"","on-success":[{"Create_Observables_String":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Define fields and massage data to fit the TEDS alert format before creating TEDS alert","transformations":{"raw_incident":{"title":"Raw Incident","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"$:ref":"$loops.Loop_Over_Incidents.value"}}}},"expression":"loops.Loop_Over_Incidents.value"},"next":"get_metadata","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"get_metadata":{"title":"Get Metadata","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"breachDevices":{"$:ref":"$loops.Loop_Over_Incidents.value.breachDevices"},"details":{"$:ref":"$loops.Loop_Over_Incidents.value.details"}}}}},"expression":"loops.Loop_Over_Incidents.value.details"},"next":"incident_start_time","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"incident_start_time":{"title":"Incident Start Time","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"periods":{"$:ref":"$loops.Loop_Over_Incidents.value.periods"}}}}},"expression":"loops.Loop_Over_Incidents.value.periods.start"},"next":"incident_end_time","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"incident_end_time":{"title":"Incident End Time","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"periods":{"$:ref":"$loops.Loop_Over_Incidents.value.periods"}}}}},"expression":"loops.Loop_Over_Incidents.value.periods.end"},"next":"incident_threat_score","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"incident_threat_score":{"title":"Incident Threat Score","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"relatedBreaches":{"$:ref":"$loops.Loop_Over_Incidents.value.relatedBreaches"}}}}},"expression":"loops.Loop_Over_Incidents.value.relatedBreaches.threatscore"},"next":"incident_hostname_breach_device","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"incident_hostname_breach_device":{"title":"Incident Hostname (Breach Device)","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"breachDevices":{"$:ref":"$loops.Loop_Over_Incidents.value.breachDevices"}}}}},"expression":"loops.Loop_Over_Incidents.value.breachDevices.hostname"},"next":"incident_ip_address_breach_devices","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"incident_ip_address_breach_devices":{"title":"Incident IP Address (Breach Devices)","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"breachDevices":{"$:ref":"$loops.Loop_Over_Incidents.value.breachDevices"}}}}},"expression":"loops.Loop_Over_Incidents.value.breachDevices.ip"},"next":"username","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"username":{"title":"Username","inputs":{"data":{},"expression":"loops.Loop_Over_Incidents.value.details.contents[key=\"Username observed prior to activity\"].values\n"},"next":"mitre_attack_tactic_technique","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"},"mitre_attack_tactic_technique":{"title":"Mitre attack tactic technique","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"mitreTactics":{"$:ref":"$loops.Loop_Over_Incidents.value.mitreTactics"}}}}},"expression":"loops.Loop_Over_Incidents.value.mitreTactics"},"next":"","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"raw_incident"},"Parse_Observables":{"meta":{},"title":"Parse Observables","type":"connector","delay":0,"pool":"$default","on-success":[{"Create_TEDS_Alert":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"","action":"$playbook.component_aRqDSHHUWVWexAD7W_playbook","asset":"","environment":{},"inputs":{"text_value":"{ $:ref: $actions.Create_Observables_String.result.observables }"},"testInputs":{}},"Create_Observables_String":{"meta":{},"title":"Create Observables String","type":"transformation","delay":0,"pool":"","on-success":[{"Parse_Observables":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Transforming the observables to parse them. ","transformations":{"observables":{"title":"Observables","inputs":{"data":{"loops":{"Loop_Over_Incidents":{"value":{"details":{"$:ref":"$loops.Loop_Over_Incidents.value.details"}}}}},"expression":"$join(\n    [\n    loops.Loop_Over_Incidents.value.details.contents[type=\"externalHost\"].values.ip,\n    loops.Loop_Over_Incidents.value.details.contents[type=\"externalHost\"].values.hostname\n    ][$ != null],\n    \" \"\n)"},"next":"","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"observables"}},"entrypoints":["Metadata_Extraction"],"loop":{"type":"for","each":{"$:ref":"$actions.Get_Incidents.result.json_body"},"parallel":false}},"Update_Incidents":{"meta":{},"title":"Update Incidents","type":"updateVariables","delay":0,"pool":"","on-success":[],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Update the alerts variable","inputSchemaReferenceId":"737474e4-2f12-4158-b186-3537c032df0b","inputs":[{"name":"Alerts","operation":{"type":"set","value":{"$:ref":"$actions.Get_Incident_Details.result.incidents"}}}]},"Get_Incident_Details":{"meta":{},"title":"Get Incident Details","type":"transformation","delay":0,"pool":"","on-success":[{"Update_Incidents":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"Retrieve the Incident from the loop return structure","transformations":{"incidents":{"title":"Incidents","inputs":{"data":{"actions":{"Loop_Over_Incidents":{"result":{"$:ref":"$actions.Loop_Over_Incidents.result"}}}},"expression":"$lookup(actions.Loop_Over_Incidents.result,'Create_TEDS_Alert') ~> $lookup('published') ~> $lookup('alert')"},"next":"","description":"","display":{"functions":[{"function":"lookup","inputs":["{ $:ref: $actions.Loop_Over_Incidents.result }","Create_TEDS_Alert"]},{"function":"lookup","inputs":["published"]},{"function":"lookup","inputs":["alert"]}],"advancedView":false},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"incidents"}},"description":"","entrypoints":["Create_Variables_for_VIC"],"environment":{},"inputs":{"type":"object","required":["Start_Time","End_Time","Include_Ack"],"properties":{"Start_Time":{"type":"string","title":"Start Time"},"End_Time":{"type":"string","title":"End Time"},"Include_Ack":{"type":"boolean","title":"Include Ack"}}},"meta":{"customActionInputSchema":{"Get_Incidents":{},"Create_TEDS_Alert":{"alert":{"type":"object","properties":{"alert_categories":{"type":"array","items":{"type":"string"}},"alert_created_timestamp":{"type":"string"},"alert_description":{"type":"string"},"alert_end_timestamp":{"type":"string"},"alert_impacted_hostnames":{"type":"array","items":{"type":"string"}},"alert_impacted_ip_addresses":{"type":"array","items":{"type":"string"}},"alert_impacted_usernames":{"type":"array","items":{"type":"string"}},"alert_ingested_timestamp":{"type":"string"},"alert_mitre_attack_tactic_technique":{"type":"array","items":{"type":"object","properties":{"tactics":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"uid":{"type":"string"}}}},"technique":{"type":"object","properties":{"name":{"type":"string"},"uid":{"type":"string"}}},"version":{"type":"string"}}}},"alert_originating_files":{"type":"array","items":{"type":"object","properties":{"content":{"type":"object","properties":{"base64":{"type":"string"},"turbine_attachment":{"type":"object"}}},"file_accessed":{"type":"string"},"file_created":{"type":"string"},"file_hashes":{"type":"array","items":{"type":"object","properties":{"hash_algorithm":{"type":"string"},"hash_value":{"type":"string"}}}},"file_modified":{"type":"string"},"file_name":{"type":"string"},"file_name_enc":{"type":"string"},"file_size":{"type":"integer"},"mime_type":{"type":"string"},"observables":{"type":"array","items":{"type":"object","properties":{"observable_enrichments":{"type":"array","items":{"type":"object","properties":{"enrichment_context":{"type":"string"},"enrichment_permalink":{"type":"string"},"enrichment_provider":{"type":"string"},"enrichment_raw_data":{"type":"string"},"enrichment_timestamp":{"type":"string"},"enrichment_type":{"type":"string"},"enrichment_verdict":{"type":"string"}}}},"observable_metadata":{"type":"object"},"observable_primary_context":{"type":"string"},"observable_primary_permalink":{"type":"string"},"observable_primary_provider":{"type":"string"},"observable_primary_timestamp":{"type":"string"},"observable_primary_verdict":{"type":"string"},"observable_type":{"type":"string"},"observable_value":{"type":"string"}}}}}}},"alert_provider":{"type":"string"},"alert_risk_score":{"type":"integer"},"alert_rules":{"type":"array","items":{"type":"object","properties":{"rule_description":{"type":"string"},"rule_id":{"type":"string"},"rule_name":{"type":"string"},"rule_type":{"type":"string"}}}},"alert_severity":{"type":"string"},"alert_title":{"type":"string"},"alert_uid":{"type":"string"},"observables":{"type":"array","items":{"type":"object","properties":{"observable_enrichments":{"type":"array","items":{"type":"object","properties":{"enrichment_context":{"type":"string"},"enrichment_permalink":{"type":"string"},"enrichment_provider":{"type":"string"},"enrichment_raw_data":{"type":"string"},"enrichment_timestamp":{"type":"string"},"enrichment_type":{"type":"string"},"enrichment_verdict":{"type":"string"}}}},"observable_metadata":{"type":"object"},"observable_primary_context":{"type":"string"},"observable_primary_permalink":{"type":"string"},"observable_primary_provider":{"type":"string"},"observable_primary_timestamp":{"type":"string"},"observable_primary_verdict":{"type":"string"},"observable_type":{"type":"string"},"observable_value":{"type":"string"}}}},"raw_alert":{"type":"object","properties":{}}}}},"Parse_Observables":{}}},"name":"component_aRWGofnipej9FM2ZG_playbook","namespace":"$default","outputSchemaReferenceId":"d64e2eaa-3975-4dea-9ffc-d7212ab6d95e","pool":"","publish":{"Alerts":{"$:ref":"$variables.Alerts"}},"schema":"playbook/2","timeout":0.0,"title":"component_aRWGofnipej9FM2ZG_playbook","triggers":{},"uuid":"00000000-0000-0000-0000-000000000000"}}