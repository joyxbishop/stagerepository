{"docSchemaVersion":1.0,"id":"66f54482a6b1e9f3a9186878","meta":{"actionsByState":{"active":0.0,"fail":0.0,"queued":0.0,"success":0.0},"assets":[],"audit":{"created":{"authProvider":{"id":"","title":"Swimlane"},"date":"2024-09-26T11:24:50.102+00:00","user":{"id":"7c0f03b8-4ea6-4567-a9b2-1be568e5e475","username":"koushik.kumar+git-test@swimlane.com"}},"modified":{"authProvider":{"id":"","title":"Swimlane"},"date":"2024-09-26T11:24:50.102+00:00","user":{"id":"7c0f03b8-4ea6-4567-a9b2-1be568e5e475","username":"koushik.kumar+git-test@swimlane.com"}},"version":1.0},"componentId":"aST6kVG1vD7fKnYF1","connectors":[],"enabled":true,"playbooks":["component_aRWGofnipej9FM2ZG_playbook"],"pools":["$default"],"sharingUid":"e4b9fb93-d3e8-4ce1-b808-73a68059f361","src":"schema: playbook/2\nname: component_aST6kVG1vD7fKnYF1_playbook\nactions:\n  Build_Query:\n    title: Build Query\n    type: transformation\n    description: \"\"\n    on-success:\n    - Darktrace_Get_Incidents: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    transformations:\n      query:\n        title: Start Time\n        description: \"\"\n        display:\n          functions: []\n          advancedView: true\n        inputs:\n          expression: $replace(inputs.start_time, \" \", \"\")\n          data:\n            inputs:\n              start_time:\n                $:ref: $inputs.start_time\n        actionType: jsonata\n        next: \"\"\n        timeout: 0\n        meta: {}\n    entrypoint: query\n    meta: {}\n    delay: 0\n    pool: \"\"\n    post: {}\n    timeout: 0\n  Darktrace_Get_Incidents:\n    title: Darktrace Get Incidents\n    type: connector\n    description: \"\"\n    on-success:\n    - Finalized_Alerts: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    action: $playbook.component_aRWGofnipej9FM2ZG_playbook\n    inputs:\n      Start_Time: '{ $:ref: $actions.Build_Query.result.query }'\n      End_Time: '{ $:ref: $variables.End_Time }'\n      Include_Ack:\n        $:ref: $variables.Include_Ack\n    pool: $default\n    meta: {}\n    delay: 0\n    post: {}\n    timeout: 0\n    asset: \"\"\n    environment: {}\n    testInputs: {}\n  Create_Custom_Query:\n    meta: {}\n    title: Create Custom Query\n    type: createVariables\n    delay: 0\n    pool: \"\"\n    on-success:\n    - Build_Query: {}\n    on-failure: []\n    on-complete: []\n    publish: {}\n    post: {}\n    timeout: 0\n    description: \"\"\n    inputSchemaReferenceId: eacd1f6b-e825-4ec1-96d1-7b711bf57cb7\n    inputs:\n    - name: End_Time\n      value: Now\n    - name: Include_Ack\n      value: true\n  Finalized_Alerts:\n    meta: {}\n    title: Finalized Alerts\n    type: transformation\n    delay: 0\n    pool: \"\"\n    on-success: []\n    on-failure: []\n    on-complete: []\n    publish: {}\n    post: {}\n    timeout: 0\n    description: \"\"\n    transformations:\n      alerts:\n        title: Alerts\n        inputs:\n          data:\n            inputs:\n              Organization:\n                $:ref: $DELETED\n              organization:\n                $:ref: $inputs.organization\n            actions:\n              Darktrace_Get_Incidents:\n                result:\n                  published:\n                    Alerts:\n                      $:ref: $actions.Darktrace_Get_Incidents.result.published.Alerts\n          expression: >-\n            (\n                $alerts := actions.Darktrace_Get_Incidents.result.published.Alerts;\n\n                $new_params := {\n                    \"alert_organization\": inputs.organization\n                };\n\n                $merged := $alerts.$merge([$, $new_params]);\n\n                $merged\n            )\n        next: \"\"\n        description: \"\"\n        display:\n          functions: []\n          advancedView: true\n        timeout: 0\n        meta: {}\n        actionType: jsonata\n    entrypoint: alerts\nmeta:\n  customActionInputSchema:\n    Darktrace_Get_Incidents: {}\ntitle: component_aST6kVG1vD7fKnYF1_playbook\ndescription: \"\"\nnamespace: $default\nentrypoints:\n- Create_Custom_Query\npool: \"\"\ntimeout: 0\npublish:\n  alerts:\n    $:ref: $actions.Finalized_Alerts.result.alerts\nenvironment: {}\ninputs:\n  type: object\n  properties:\n    organization:\n      title: organization\n      description: organization\n      type: string\n    start_time:\n      title: start_time\n      description: start_time\n      type: string\ntriggers: {}\n","store":{},"validation":{"valid":true}},"playbook":{"actions":{"Build_Query":{"meta":{},"title":"Build Query","type":"transformation","delay":0,"pool":"","on-success":[{"Darktrace_Get_Incidents":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"","transformations":{"query":{"title":"Start Time","inputs":{"data":{"inputs":{"start_time":{"$:ref":"$inputs.start_time"}}},"expression":"$replace(inputs.start_time, \" \", \"\")"},"next":"","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"query"},"Darktrace_Get_Incidents":{"meta":{},"title":"Darktrace Get Incidents","type":"connector","delay":0,"pool":"$default","on-success":[{"Finalized_Alerts":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"","action":"$playbook.component_aRWGofnipej9FM2ZG_playbook","asset":"","environment":{},"inputs":{"Start_Time":"{ $:ref: $actions.Build_Query.result.query }","End_Time":"{ $:ref: $variables.End_Time }","Include_Ack":{"$:ref":"$variables.Include_Ack"}},"testInputs":{}},"Create_Custom_Query":{"meta":{},"title":"Create Custom Query","type":"createVariables","delay":0,"pool":"","on-success":[{"Build_Query":{}}],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"","inputSchemaReferenceId":"eacd1f6b-e825-4ec1-96d1-7b711bf57cb7","inputs":[{"name":"End_Time","value":"Now"},{"name":"Include_Ack","value":true}]},"Finalized_Alerts":{"meta":{},"title":"Finalized Alerts","type":"transformation","delay":0,"pool":"","on-success":[],"on-failure":[],"on-complete":[],"publish":{},"post":{},"timeout":0,"description":"","transformations":{"alerts":{"title":"Alerts","inputs":{"data":{"inputs":{"Organization":{"$:ref":"$DELETED"},"organization":{"$:ref":"$inputs.organization"}},"actions":{"Darktrace_Get_Incidents":{"result":{"published":{"Alerts":{"$:ref":"$actions.Darktrace_Get_Incidents.result.published.Alerts"}}}}}},"expression":"(\n    $alerts := actions.Darktrace_Get_Incidents.result.published.Alerts;\n\n    $new_params := {\n        \"alert_organization\": inputs.organization\n    };\n\n    $merged := $alerts.$merge([$, $new_params]);\n\n    $merged\n)"},"next":"","description":"","display":{"functions":[],"advancedView":true},"timeout":0,"meta":{},"actionType":"jsonata"}},"entrypoint":"alerts"}},"description":"","entrypoints":["Create_Custom_Query"],"environment":{},"inputs":{"type":"object","properties":{"organization":{"title":"organization","description":"organization","type":"string"},"start_time":{"title":"start_time","description":"start_time","type":"string"}}},"meta":{"customActionInputSchema":{"Darktrace_Get_Incidents":{}}},"name":"component_aST6kVG1vD7fKnYF1_playbook","namespace":"$default","pool":"","publish":{"alerts":{"$:ref":"$actions.Finalized_Alerts.result.alerts"}},"schema":"playbook/2","timeout":0.0,"title":"component_aST6kVG1vD7fKnYF1_playbook","triggers":{},"uuid":"00000000-0000-0000-0000-000000000000"}}